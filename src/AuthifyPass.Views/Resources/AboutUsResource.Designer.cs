//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AuthifyPass.Views.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class AboutUsResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AboutUsResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AuthifyPass.Views.Resources.AboutUsResource", typeof(AboutUsResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client-Based Revocation.
        /// </summary>
        internal static string ClientRevocation {
            get {
                return ResourceManager.GetString("ClientRevocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anyone can contribute to the project, submit improvements, or report issues on GitHub..
        /// </summary>
        internal static string CommunityText {
            get {
                return ResourceManager.GetString("CommunityText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Community and Collaboration.
        /// </summary>
        internal static string CommunityTitle {
            get {
                return ResourceManager.GetString("CommunityTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comparison with Traditional Authenticators.
        /// </summary>
        internal static string ComparisonTitle {
            get {
                return ResourceManager.GetString("ComparisonTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Offers a simple public API to integrate 2FA without worrying about servers or databases, while ensuring total privacy..
        /// </summary>
        internal static string DeveloperFriendlyText {
            get {
                return ResourceManager.GetString("DeveloperFriendlyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Built for Developers.
        /// </summary>
        internal static string DeveloperFriendlyTitle {
            get {
                return ResourceManager.GetString("DeveloperFriendlyTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Developer Registration.
        /// </summary>
        internal static string DeveloperRegistration {
            get {
                return ResourceManager.GetString("DeveloperRegistration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature.
        /// </summary>
        internal static string Feature {
            get {
                return ResourceManager.GetString("Feature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multi-Device Sync.
        /// </summary>
        internal static string MultiDeviceSync {
            get {
                return ResourceManager.GetString("MultiDeviceSync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Source.
        /// </summary>
        internal static string OpenSource {
            get {
                return ResourceManager.GetString("OpenSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entire AuthifyPass ecosystem is fully open, allowing any developer to audit, improve, or contribute..
        /// </summary>
        internal static string OpenSourceText {
            get {
                return ResourceManager.GetString("OpenSourceText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Source and Transparent.
        /// </summary>
        internal static string OpenSourceTitle {
            get {
                return ResourceManager.GetString("OpenSourceTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AuthifyPass stores no personal data. All identifiers are anonymous and encrypted, ensuring that no one can trace users..
        /// </summary>
        internal static string PrivacyFirstText {
            get {
                return ResourceManager.GetString("PrivacyFirstText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Privacy First.
        /// </summary>
        internal static string PrivacyFirstTitle {
            get {
                return ResourceManager.GetString("PrivacyFirstTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public API.
        /// </summary>
        internal static string PublicAPI {
            get {
                return ResourceManager.GetString("PublicAPI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An open and privacy-respectful platform for Two-Factor Authentication..
        /// </summary>
        internal static string Subtitle {
            get {
                return ResourceManager.GetString("Subtitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AuthifyPass - Security Without Compromising Privacy.
        /// </summary>
        internal static string Title {
            get {
                return ResourceManager.GetString("Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TOTP Standard Support.
        /// </summary>
        internal static string TotpSupport {
            get {
                return ResourceManager.GetString("TotpSupport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Traditional Authenticator.
        /// </summary>
        internal static string TraditionalAuthenticator {
            get {
                return ResourceManager.GetString("TraditionalAuthenticator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Data Privacy.
        /// </summary>
        internal static string UserPrivacy {
            get {
                return ResourceManager.GetString("UserPrivacy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View on GitHub.
        /// </summary>
        internal static string ViewOnGitHub {
            get {
                return ResourceManager.GetString("ViewOnGitHub", resourceCulture);
            }
        }
    }
}
