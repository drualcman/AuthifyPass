@page "/"
@rendermode InteractiveWebAssembly


<div class="field has-addons">
    <div class="control is-expanded">
        <input placeholder="@ViewModel.SearchPlaceholderText" class="input is-rounded"
               @bind-Value=ViewModel.SearchText @bind-Value:event="oninput" />
    </div>
    <div class="control">
        <a href="add" class="button is-link">
            <span class="icon"><i class="fa-solid fa-file-circle-plus"></i></span>
        </a>
    </div>
</div>

<div>
</div>

<div class="codes-list">
    @if (ViewModel.HasCodes)
    {
        foreach (var item in ViewModel.TwoFactorCodes)
        {
            <div class="code-card box">
                <button class="button is-danger action-button" @onclick="() => ViewModel.OpenDeleteModal(item)">
                    <span class="icon"><i class="fa-solid fa-trash-can"></i></span>
                </button>
                <div class="code-display" @onclick="() => ViewModel.CopyToClipboard(item.CurrentCode)">
                    <div class="description-container">
                        <p class="description is-size-6">@item.Description</p>
                        <p class="name is-size-7">@item.Name</p>
                    </div>
                    <div class="code-container">
                        <p class="code is-size-2 has-text-weight-bold">@item.CurrentCode</p>
                    </div>
                </div>
            </div>



        }
    }
    else
    {
        <p>@(new MarkupString(ViewModel.NoCodesContent))</p>
    }
</div>

<CountDownComponent TimeToCount=30 OnReset=ViewModel.RefreshCodes />



<ModalComponent @bind-IsVisible="ViewModel.IsModalVisible"
                OnClose="ViewModel.CloseModal">
    <Title>
        @(new MarkupString(ViewModel.ModalTitleContent))
    </Title>
    <BodyContent>
        @(new MarkupString(ViewModel.ModalBodyContent))
    </BodyContent>
    <FooterContent>
        <button class="button is-danger @(ViewModel.IsDeleting ? "is-loading":"")" @onclick="ViewModel.DeleteSelectedCode">De@(new MarkupString(ViewModel.DeleteButtonContent))lete</button>
        <button class="button" @onclick="ViewModel.CloseModal">@(new MarkupString(ViewModel.CancelButtonContent))</button>
    </FooterContent>
</ModalComponent>

<ToastMessageComponent />