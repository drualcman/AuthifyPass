@page "/register"
@rendermode InteractiveServer

<h1 class="title is-3 has-text-centered">@Localizer[nameof(RegisterPageContent.TitleText)]</h1>
@if (IsRegistered)
{
    <div class="notification is-success">
        <p>@Response.Message</p>
    </div>
    <div class="notification">
        <p><strong>Client ID:</strong> @Response.ClientId</p>
        <p><strong>Secret:</strong> @Response.SharedSecret</p>
    </div>
}
else
{
    <div class="box">
        <EditForm Model="Client" OnValidSubmit="SendRegister">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="field">
                <label class="label">@Localizer[nameof(RegisterPageContent.NameLabelText)]</label>
                <div class="control">
                    <input type="text" class="input" @bind-value="Client.Name" placeholder="@Localizer[nameof(RegisterPageContent.NamePlaceholderText)]" />
                </div>
                <ValidationMessage For="() => Client.Name" class="help is-danger" />
            </div>

            <div class="field">
                <label class="label">@Localizer[nameof(RegisterPageContent.EmailLabelText)]</label>
                <div class="control has-icons-left">
                    <input type="email" class="input" @bind-value="Client.Email" placeholder="@Localizer[nameof(RegisterPageContent.EmailPlaceholderText)]" />
                    <span class="icon is-small is-left">
                        <i class="fas fa-envelope"></i>
                    </span>
                </div>
                <ValidationMessage For="() => Client.Email" class="help is-danger" />
            </div>

            <div class="field">
                <label class="label">@Localizer[nameof(RegisterPageContent.PasswordLabelText)]</label>
                <div class="control has-icons-left">
                    <input type="password" class="input" @bind-value="Client.Password" placeholder="@Localizer[nameof(RegisterPageContent.PasswordPlaceholderText)]" />
                    <span class="icon is-small is-left">
                        <i class="fas fa-lock"></i>
                    </span>
                </div>
                <ValidationMessage For="() => Client.Password" class="help is-danger" />
            </div>

            <div class="field">
                <label class="label">@Localizer[nameof(RegisterPageContent.ConfirmLabelText)]</label>
                <div class="control has-icons-left">
                    <input type="password" class="input" @bind-value="Client.ConfirmPassword" placeholder="@Localizer[nameof(RegisterPageContent.ConfirmPlaceholderText)]" />
                    <span class="icon is-small is-left">
                        <i class="fas fa-lock"></i>
                    </span>
                </div>
                <ValidationMessage For="() => Client.ConfirmPassword" class="help is-danger" />
            </div>

            <div class="columns">
                @if (!IsValid)
                {
                    <div class="column">
                        <div class="field ">
                            <label class="label">@Localizer[nameof(RegisterPageContent.ValidationText)]</label>
                            <div class="control">
                                <span class="input">@GeneratedCode</span>
                            </div>
                        </div>
                    </div>
                }
                <div class="column captcha">
                    <CaptchaComponent DataSource=CaptchaSource Properties=CaptchaOptions @ref=Captcha OnValidate="(v) => IsValid = v">
                        <BeforeValidate>
                            <span class="button is-success">@Localizer[nameof(RegisterPageContent.ValidationButtonText)]</span>
                        </BeforeValidate>
                        <AfterValidate>
                            <div class="field is-grouped">
                                <div class="control">
                                    <button type="submit" class="button is-primary @(IsWorking ? "is-loading":"")">@Localizer[nameof(RegisterPageContent.RebisterButtonText)]</button>
                                </div>
                                @if (!IsWorking)
                                {
                                    <div class="control">
                                        <button type="reset" class="button is-light">@Localizer[nameof(RegisterPageContent.CancelButtonText)]</button>
                                    </div>
                                }
                            </div>
                        </AfterValidate>
                    </CaptchaComponent>
                </div>
            </div>
        </EditForm>
    </div>

    <CountDownComponent TimeToCount=30 OnReset=RefreshCode />

    @if (!string.IsNullOrWhiteSpace(ErrorMessage))
    {
        <div class="notification is-danger">
            <button class="delete" @onclick="ClearError"></button>
            @ErrorMessage
        </div>
    }
}   